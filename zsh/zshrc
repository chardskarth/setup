# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source $HOME/.profile

# The following lines are commented due to antigen usage
# Keeping them here for future reference
# Path to your oh-my-zsh installation.
# export ZSH=$HOME"/.oh-my-zsh"
# source $ZSH/oh-my-zsh.sh

DOTFILES_DIRECTORY=$HOME/sources/chardskarth/setup
MY_ZSH_SCRIPTS=$DOTFILES_DIRECTORY/zsh/**/*.zsh
for f (~/sources/chardskarth/setup/zsh/**/*.zsh(N.))  . $f
hash -d dotfiles=$DOTFILES_DIRECTORY

# use antigen ohmyzsh plugin manager: github.com/zsh-users/antigen
source ~/antigen.zsh
 
antigen use oh-my-zsh

antigen bundle git
antigen bundle tmux
antigen bundle emoji
antigen bundle zsh-users-highlighting
 
antigen bundle lukechilds/zsh-nvm
antigen bundle softmoth/zsh-vim-mode
antigen bundle desyncr/auto-ls
 
antigen theme romkatv/powerlevel10k

antigen apply

alias lg='lazygit'
alias gdcached='git diff --cached'

path=($HOME'/.local/bin' $HOME'/.local/bin/bin' $HOME'/.local/pipx/venvs/pokemon-terminal' $HOME/go/bin $path)
export path

auto-ls-custom-fn() {
	ls -ltra -I . -I ..
}
AUTO_LS_COMMANDS=(custom-fn)

 
EDITOR=nvim
export EDITOR

# start bash agent
SSH_ENV=$HOME"/.ssh/env"

function start_agent {
        echo "Initialising new SSH agent..."
        /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
        chmod 600 "${SSH_ENV}"
        . "${SSH_ENV}" > /dev/null
        echo succeeded. ssh-agent started
        # /usr/bin/ssh-add;
}

# Source SSH settings, if applicable
if [ -f "${SSH_ENV}" ]; then
        . "${SSH_ENV}" > /dev/null
        ps -ef | grep ${SSH_AGENT_PID}  | grep ssh-agent$ > /dev/null || {
                start_agent;
}
else
        start_agent;
fi

# fix cursor sometimes get stuck in wrong mode. make it a blinking bar cursor on pre command
_fix_cursor() {
	echo -ne '\e[5 q'
}
precmd_functions+=(_fix_cursor)

MODE_CURSOR_VIINS="#00ff00 blinking bar"
MODE_CURSOR_REPLACE="$MODE_CURSOR_VIINS #ff0000"
MODE_CURSOR_VICMD="green block"
MODE_CURSOR_SEARCH="#ff00ff steady underline"
MODE_CURSOR_VISUAL="$MODE_CURSOR_VICMD steady bar"
MODE_CURSOR_VLINE="$MODE_CURSOR_VISUAL #00ffff"


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
#ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# Enable Vim mode in ZSH. Source: https://gist.github.com/thisivan/823138
# bindkey -v
# 
# autoload -U edit-command-line
# zle -N edit-command-line
# bindkey '^E' edit-command-line                   # Opens Vim to edit current command line
# bindkey '^R' history-incremental-search-backward # Perform backward search in command line history
# bindkey '^S' history-incremental-search-forward  # Perform forward search in command line history
# bindkey '^P' history-search-backward             # Go back/search in history (autocomplete)
# bindkey '^N' history-search-forward              # Go forward/search in history (autocomplete)

#plugins=(git zsh-nvm zsh-syntax-highlighting zsh-vim-mode tmux emoji)

#export LESSOPEN="/usr/share/source-highlight/src-hilite-lesspipe.sh %s"
#export LESSOPEN="|highlight --out-format=xterm256 %s"
#export LESS=" -R "

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

[ -s "$HOME/.jabba/jabba.sh" ] && source "$HOME/.jabba/jabba.sh"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/pi/.sdkman"
[[ -s "/home/pi/.sdkman/bin/sdkman-init.sh" ]] && source "/home/pi/.sdkman/bin/sdkman-init.sh"

# source awesome-terminal-fonts unicode icons
# https://github.com/gabrielelana/awesome-terminal-fonts
# then executed ./install.sh
[[ -s "~/.fonts" ]] && source ~/.fonts/*.sh

echo
